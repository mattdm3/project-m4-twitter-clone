{"version":3,"sources":["assets/logo.svg","constants.js","components/NavLink.js","components/Sidebar.js","components/GlobalStyles.js","components/Bookmarks.js","components/CurrentUserContext.js","components/AllUserContext.js","components/HeartSVG.js","components/TweetActions.js","components/Tweet.js","components/ProfileInfo.js","components/TweetPoster.js","components/HomeFeed.js","components/UserProfilePage.js","components/StyledLink.js","components/SingleTweet.js","components/TweetDetailsPage.js","components/Error.js","components/StretchGoalPage.js","components/ProfilePageNew.js","components/App.js","serviceWorker.js","components/UserTweetsContext.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","props","height","width","fill","viewBox","ref","ForwardRef","forwardRef","COLORS","primary","NavLink","getProps","style","color","isCurrent","StyledLink","styled","StyledIcon","Icon","StyledLogo","CatLogo","SidebarContainer","div","Sidebar","to","icon","home","user","bell","bookmark","ContentContainer","PageContainer","styledLoader","css","styledLoaderUpdate","StyledMoonLoader","size","StyledPulseLoader","StyledBeatLoader","Bookmarks","CurrentUserContext","React","createContext","CurrentUserProvider","children","useState","currentUser","setCurrentUser","status","setStatus","feedStatus","setFeedStatus","userTweets","setUserTweets","updateCurrentUserFeed","setUpdateCurrentUserFeed","useEffect","fetch","then","res","json","data","catch","err","console","log","Provider","value","AllUserContext","AllUserProvider","feed","setFeed","updateFeed","setUpdateFeed","window","location","href","svg","Foreground","Background","scale","keyframes","scaleHeart","fade","StyledActions","SpringyHeart","StyledHeart","FiHeart","TweetActions","triggerFetch","isLiked","tweetId","retweets","likes","isRetweeted","likeAnimation","setLikeAnimation","retweetAnimation","setRetweetAnimation","useContext","messageCircle","onClick","e","JSON","stringify","response","position","repeat","left","top","cursor","stroke","share","MainContainer","PaddingContainer","TweetHeading","HandleAndDate","TweetContent","ProfileImg","img","RetweetContainer","Tweet","retweet","profileImg","imgSource","tweetContent","displayName","handle","timestamp","src","alt","ProfileContainer","AvatarContainer","StyledButton","button","ProfileContent","NameAndHandle","ProfileName","ProfileLocation","ProfileDescription","FollowData","ProfileButtons","ProfileInfo","description","headerImg","avatarImg","numFollowers","followInfo","numFollowing","joinDate","mapPin","calendar","ButtonContainer","TweetBox","StyledInput","textarea","InputContainer","Avatar","TweetPoster","counter","setCounter","tweetText","setTweetText","tweetStatus","setTweetStatus","placeHolder","setPlaceHolder","handleTweetSubmit","requestOptions","method","headers","body","setTimeout","profile","avatarSrc","placeholder","onChange","type","lenght","HomeFeed","setUpdateFeedTrigger","tweetIds","map","tweetsById","retweetFrom","author","format","Date","numRetweets","numLikes","media","url","PositionedFollowInfo","p","UserProfile","userProfile","setUserProfile","setTriggerFetch","bannerSrc","bio","joined","isFollowingYou","background","Link","HeadingContainer","Title","TimeStamp","SingleTweet","handleLike","StyledBack","TweetDetailsPage","thisTweet","setThisTweet","history","back","chevronLeft","tweet","id","Container","GoAlert","Error","StyledStretch","StretchGoalPage","ProfilePageNew","App","path","UserProfilePage","default","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a0b3e28d.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M67.431,24.417c0.473-0.017,0.936,0.006,1.386,0.034c0.452,0.012,0.884,0.065,1.295,0.121    c0.413,0.044,0.802,0.1,1.155,0.183c0.355,0.074,0.682,0.142,0.971,0.202c0.284,0.083,0.532,0.155,0.736,0.214    c0.41,0.12,0.644,0.188,0.644,0.188s-0.224-0.096-0.617-0.263c-0.197-0.084-0.436-0.187-0.711-0.304    c-0.283-0.096-0.603-0.204-0.951-0.322c-0.348-0.126-0.733-0.23-1.146-0.326c-0.411-0.106-0.846-0.214-1.304-0.283    c-0.457-0.084-0.931-0.165-1.417-0.207c-0.485-0.063-0.981-0.1-1.479-0.116c-0.331-0.019-0.66-0.015-0.989-0.015    c-0.266-2.276-1.078-4.374-2.304-6.148c0,0,1.074-7.245-1.431-14.224c-0.376-1.047-6.477,8.908-6.477,8.908    c-0.807-0.165-1.642-0.256-2.495-0.256c-1.521,0-2.975,0.29-4.328,0.797c0,0-4.843-8.786-5.781-6.54    c-2.844,6.812-2.138,15.155-2.138,15.155c-0.364,1.237-0.563,2.552-0.563,3.913c0,0.027,0.004,0.053,0.004,0.079    c-0.461,0.017-0.922,0.053-1.373,0.115c-0.457,0.042-0.902,0.124-1.33,0.208c-0.431,0.068-0.837,0.178-1.222,0.284    c-0.386,0.096-0.746,0.201-1.07,0.327c-0.659,0.214-1.184,0.446-1.545,0.624c-0.364,0.167-0.571,0.262-0.571,0.262    s0.218-0.067,0.6-0.187c0.378-0.128,0.924-0.29,1.594-0.416c0.33-0.083,0.692-0.14,1.079-0.184    c0.384-0.054,0.788-0.109,1.211-0.121c0.42-0.028,0.854-0.052,1.296-0.035c0.44-0.004,0.887,0.018,1.333,0.06    c0.016,0.001,0.031,0.004,0.047,0.006c0.025,0.337,0.064,0.668,0.113,0.998c-0.03,0.009-0.06,0.015-0.09,0.024    c-0.904,0.262-1.783,0.607-2.577,0.978c-0.404,0.169-0.773,0.38-1.125,0.571c-0.356,0.184-0.681,0.376-0.968,0.575    c-0.594,0.365-1.053,0.717-1.366,0.973c-0.317,0.248-0.499,0.39-0.499,0.39s0.198-0.117,0.545-0.323    c0.341-0.213,0.836-0.501,1.462-0.783c0.303-0.158,0.643-0.305,1.012-0.438c0.364-0.143,0.743-0.299,1.155-0.412    c0.809-0.258,1.686-0.479,2.576-0.618c0.012-0.002,0.022-0.003,0.034-0.004c0.198,0.896,0.479,1.758,0.84,2.577    c-8.666,2.314-15.3,10.89-16.236,21.469c-4.863,2.672-9.69,7.991-7.482,18.488c1.472,6.992,15.749,16.109,22.629,16.306    c2.173,0.062,2.558-2.099,2.289-3.018c-1.806-6.171-14.185-4.764-19.696-15.691c-1.825-3.618-0.198-7.546,2.267-10.866    c1.085,11.989,9.484,21.383,19.858,21.987c1.287,1.342,3.125,2.2,5.187,2.2c2.771,0,5.148-1.535,6.293-3.749    c1.05,0.592,2.261,0.955,3.57,0.955c3.886,0,7.036-2.99,7.036-6.68c0-1.779-0.745-3.386-1.939-4.583    c0.12-0.997,0.211-2.04,0.272-3.121c1.073-2.963,1.667-6.224,1.667-9.647c0-7.336-2.742-13.906-7.073-18.428    c3.21-2.184,5.418-5.819,5.762-10.012c0.237,0.054,0.475,0.098,0.711,0.163c0.464,0.115,0.923,0.249,1.368,0.406    c0.453,0.137,0.884,0.309,1.3,0.482c0.424,0.158,0.815,0.349,1.186,0.534c0.376,0.176,0.726,0.355,1.033,0.547    c0.312,0.186,0.599,0.356,0.853,0.507c0.242,0.17,0.453,0.319,0.626,0.441c0.349,0.246,0.548,0.387,0.548,0.387    s-0.181-0.164-0.497-0.449c-0.159-0.144-0.353-0.318-0.575-0.518c-0.236-0.183-0.503-0.388-0.795-0.613    c-0.288-0.233-0.619-0.456-0.979-0.681c-0.354-0.234-0.73-0.478-1.142-0.69c-0.405-0.229-0.827-0.459-1.273-0.656    c-0.439-0.217-0.896-0.413-1.361-0.59c-0.314-0.128-0.634-0.234-0.953-0.343c0-0.023,0.002-0.046,0.002-0.069    c0-0.187-0.014-0.37-0.021-0.555c0.306-0.036,0.61-0.078,0.92-0.097C66.482,24.436,66.96,24.414,67.431,24.417z\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    height: 90,\n    width: 90,\n    fill: \"hsl(258deg, 100%, 50%)\",\n    viewBox: \"0 0 90 90\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.c1b4e74c.svg\";\nexport { ForwardRef as ReactComponent };","\n\nexport const COLORS = {\n    // Bright purple:\n    primary: 'hsl(258deg, 100%, 50%)',\n\n    // Add more colors as needed!\n};\n\nexport default COLORS;","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport COLORS from \"../constants\";\n\nexport const NavLink = props => (<Link {...props} getProps={({ isCurrent }) => {\n    // the object returned here is passed to the\n    // anchor element's props\n    return {\n        style: {\n            color: isCurrent ? `${COLORS.primary}` : \"black\"\n        }\n    };\n}} />);\n\nexport default NavLink;\n","import React from \"react\";\nimport styled from \"styled-components\";\n// import { NavLink } from \"react-router-dom\"\nimport { ReactComponent as CatLogo } from \"../assets/logo.svg\";\nimport { Icon } from 'react-icons-kit';\nimport { home } from 'react-icons-kit/feather/home';\nimport { user } from 'react-icons-kit/feather/user';\nimport { bell } from 'react-icons-kit/feather/bell';\nimport { bookmark } from 'react-icons-kit/feather/bookmark';\nimport { NavLink } from \"./NavLink\";\nimport { Link } from \"@reach/router\";\n\n\n\nconst Sidebar = () => {\n\n\n    return (\n\n\n        <SidebarContainer>\n            <Link to=\"/\">\n             <StyledLogo />\n            </Link>\n            \n            <ul>\n                <StyledLink to=\"/\"><li><StyledIcon icon={home} />Home</li></StyledLink>\n                <StyledLink to=\"/my-profile\"><li> <StyledIcon icon={user} />Profile</li></StyledLink>\n                <StyledLink to=\"/stretchgoal\"><li><StyledIcon icon={bell} />Notifications</li></StyledLink>\n                <StyledLink to=\"/stretchgoal\"><li><StyledIcon icon={bookmark} />Bookmarks</li></StyledLink>\n            </ul>\n        </SidebarContainer>\n\n        /* <MainContent>{props.children}</MainContent> */\n\n\n    )\n}\n\n\nconst StyledLink = styled(NavLink)`\n    text-decoration: none;\n    color: black; \n`\n\n\nconst StyledIcon = styled(Icon)`\n    padding-right: 10px; \n    font-size: 1.1rem;\n`\n\nconst StyledLogo = styled(CatLogo)`\n    width: 50px; \n    position: relative;\n    top: 10px; \n    left: -5px; \n`\n\nconst SidebarContainer = styled.div`\n    /* position: fixed;  */\n    left: 160px; \n    margin-left: 160px;\n/*    \n    margin-left: 180px;  */\n    /* margin-right: 50px;  */\n    min-width: 150px; \n    height: 100%; \n    /* border-right: 1px solid #EEEEEE; */\n    padding-right: 20px; \n    z-index: 3;\n    \n  \n    \n\n    ul {\n        display: flex; \n        flex-direction: column;\n        align-items: flex-start;\n        width: 100%; \n        \n\n    }\n\n    li{\n        margin: 15px 0;\n        text-align: left; \n        font-weight: 700;\n        width: 100%; \n        \n\n        border: 1px solid transparent;\n        padding: 7px 9px; \n        border-radius: 20px; \n\n        &:hover {\n            background: #EDE7FE;\n        }\n\n       \n        \n    }\n`\n\nexport default Sidebar;","import React from \"react\"\nimport styled from \"styled-components\"\nimport { css } from \"@emotion/core\";\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport BeatLoader from \"react-spinners/BeatLoader\"\n\nexport const ContentContainer = styled.div`\n    position: absolute;\n    left: 340px; \n    display: flex; \n    flex-direction: column;\n    align-items: flex-start;\n    align-content: center;\n    width: 900px; \n    margin-right: 80px; \n    border-right: 1px solid #EEEEEE;\n    border-left: 1px solid #EEEEEE; \n    \n`\n\nexport const PageContainer = styled.div`\ndisplay: flex; \n`\n\nconst styledLoader = css`\n    margin: 0 auto;\n    margin-top: 25%;\n`\nconst styledLoaderUpdate = css`\n    margin-top: 20%;\n    margin-left: 35%;\n    position: absolute;\n`\n\nexport const StyledMoonLoader = () => {\n    return <MoonLoader\n        css={styledLoader}\n        size={80}\n        color={\"#123abc\"}\n    />\n}\n\nexport const StyledPulseLoader = () => {\n    return <PulseLoader\n        css={styledLoaderUpdate}\n        size={20}\n        color={\"#123abc\"}\n    />\n}\n\nexport const StyledBeatLoader = () => {\n    return <BeatLoader\n        size={5}\n        color={\"white\"}\n\n    />\n}","import React from 'react'\nimport Sidebar from \"./Sidebar\"\nimport { ContentContainer, PageContainer } from \"./GlobalStyles\"\n\n\nconst Bookmarks = () => {\n    return (\n        <>\n            \n                Bookmarks\n        \n\n        </>\n\n\n    )\n};\n\n\nexport default Bookmarks;","import React from \"react\"\nimport { set } from \"date-fns/esm\";\n\nexport const CurrentUserContext = React.createContext(null)\n\nexport const CurrentUserProvider = ({ children }) => {\n\n\n    const [currentUser, setCurrentUser] = React.useState(null);\n    const [status, setStatus] = React.useState(\"loading\");\n    const [feedStatus, setFeedStatus] = React.useState(\"idle\");\n\n    const [userTweets, setUserTweets] = React.useState(null);\n    const [updateCurrentUserFeed, setUpdateCurrentUserFeed] = React.useState(true)\n\n    // Fetch the user data from the API (/me/profile)\n    // When the data is received, update currentUser.\n    // Also, set `status` to `idle`\n\n    React.useEffect(() => {\n        fetch(\"/api/me/profile\", {\n            \"method\": \"GET\",\n            \"headers\": {}\n        })\n            .then(res => res.json())\n            .then(data => {\n                setCurrentUser(data);\n                setStatus(\"idle\");\n            })\n            .catch(err => {\n                console.log(err);\n                // if(err){\n                //     window.location.href = \"/error\"\n                // }\n            });\n    }, [status])\n\n    React.useEffect(() => {\n        setFeedStatus(\"loading\");\n\n        fetch(\"/api/me/home-feed\", {\n            \"method\": \"GET\",\n            \"headers\": {}\n        })\n            .then(res => res.json())\n            .then(data => {\n                setUserTweets(data);\n                setFeedStatus(\"loaded\")\n                \n            })\n            .catch(err => {\n                console.log(err);\n                \n                \n                // if(err){\n                //     window.location.href = \"/error\"\n                // }\n            });\n    }, [updateCurrentUserFeed])\n\n    \n\n    return (\n        <CurrentUserContext.Provider value={{ feedStatus, currentUser, setStatus, userTweets, updateCurrentUserFeed, setUpdateCurrentUserFeed }}>\n            {children}\n        </CurrentUserContext.Provider>\n    )\n\n\n}\n","import React from \"react\"\n\nexport const AllUserContext = React.createContext(null);\n\nexport const AllUserProvider = ({ children }) => {\n\n\n    const [feed, setFeed] = React.useState(null);\n    const [feedStatus, setFeedStatus] = React.useState(\"loading\")\n\n    const [users, setUsers] = React.useState([])\n\n    const [updateFeed, setUpdateFeed] = React.useState(true)\n\n\n    React.useEffect(() => {\n        fetch(`/api/me/home-feed`, {\n            \"method\": \"GET\",\n            \"headers\": {}\n        })\n            .then(res => res.json())\n            .then(data => {\n                setFeed(data);\n                setFeedStatus(\"loaded\");\n                // console.log(data)\n            })\n            .catch(err => {\n                console.log(err);\n                if (err) {\n                    window.location.href = \"/error\"\n                }\n            });\n    }, [updateFeed])\n\n    return (\n        <AllUserContext.Provider value={{ feed, feedStatus, setUpdateFeed, updateFeed }}>\n            {children}\n        </AllUserContext.Provider>\n    )\n\n}","import React from \"react\"\nimport { Icon } from 'react-icons-kit';\nimport styled from 'styled-components';\nimport { heart } from 'react-icons-kit/feather/heart'\n\nconst StyledSvg = styled.svg`\n    display: block; \n    fill: red; \n`\n\nconst HeartSVG = () => {\n    return (\n\n        <StyledSvg>\n            <Icon icon={heart} color=\"red\" />\n        </StyledSvg>\n\n    )\n}\n\nexport default HeartSVG; ","import React from \"react\"\nimport styled, { keyframes, css } from 'styled-components'\nimport { messageCircle } from 'react-icons-kit/feather/messageCircle'\nimport { Icon } from 'react-icons-kit';\nimport { repeat } from 'react-icons-kit/feather/repeat'\nimport { heart } from 'react-icons-kit/feather/heart'\nimport { share } from 'react-icons-kit/feather/share'\n// import { heart } from 'react-icons-kit/ionicons/heart'\nimport { useSpring, animated } from 'react-spring'\nimport { AllUserContext } from \"./AllUserContext\"\nimport {CurrentUserContext} from './CurrentUserContext'\nimport HeartSVG from \"./HeartSVG\"\nimport { FiHeart, FiBluetooth } from \"react-icons/fi\";\n\n\nconst TweetActions = ({ triggerFetch, isLiked, tweetId, retweets, likes, isRetweeted }) => {\n\n    const [likeAnimation, setLikeAnimation] = React.useState(false)\n\n    const [retweetAnimation, setRetweetAnimation] = React.useState(false);\n\n    const { setUpdateFeed, updateFeed } = React.useContext(AllUserContext);\n\n    const {setUpdateCurrentUserFeed, updateCurrentUserFeed } = React.useContext(CurrentUserContext)\n\n\n    const reRenderOnLike = () => {\n\n        if (updateFeed) {\n            setUpdateFeed(false)\n        } else setUpdateFeed(true);\n\n       \n\n        // (likeAnimation ? setLikeAnimation(false) : setLikeAnimation(true));\n\n    }\n\n    // const reRenderFeed = () => {\n    //     if (updateCurrentUserFeed) {\n    //         setUpdateCurrentUserFeed(false)\n    //     } else setUpdateCurrentUserFeed(true);\n\n    // }\n\n\n    const handleLike = (e) => {\n\n        triggerFetch();\n\n        if (isLiked) {\n\n            fetch(`/api/tweet/${tweetId}/like`, {\n                \"method\": \"PUT\",\n                \"headers\": {\n                    \"content-type\": \"application/json\"\n                },\n                \"body\": JSON.stringify({\n                    \"like\": false\n                })\n            })\n                .then(response => {\n                    setLikeAnimation(false);\n                    // reRenderOnLike();\n                    \n\n\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        } else {\n            fetch(`/api/tweet/${tweetId}/like`, {\n                \"method\": \"PUT\",\n                \"headers\": {\n                    \"content-type\": \"application/json\"\n                },\n                \"body\": JSON.stringify({\n                    \"like\": true\n                })\n            })\n                .then(response => {\n                    // reRenderOnLike();\n                    setLikeAnimation(true);\n                    \n                })\n                .catch(err => {\n                    console.log(err);\n                    if (err) {\n                        window.location.href = \"/error\"\n                    }\n                });\n        }\n\n\n\n    }\n\n\n    const handleRetweet = (e) => {\n\n        triggerFetch();\n\n        if (isRetweeted) {\n\n            fetch(`/api/tweet/${tweetId}/retweet`, {\n                \"method\": \"PUT\",\n                \"headers\": {\n                    \"content-type\": \"application/json\"\n                },\n                \"body\": JSON.stringify({\n                    \"retweet\": false\n                })\n            })\n                .then(response => {\n                    setRetweetAnimation(false);\n                    \n                    \n\n\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        } else {\n            fetch(`/api/tweet/${tweetId}/retweet`, {\n                \"method\": \"PUT\",\n                \"headers\": {\n                    \"content-type\": \"application/json\"\n                },\n                \"body\": JSON.stringify({\n                    \"retweet\": true\n                })\n            })\n                .then(response => {\n                    \n                    setRetweetAnimation(true);\n                    \n                    \n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n\n\n\n    }\n\n    return (\n        <StyledActions>\n            <StyledIcon icon={messageCircle} />\n            <div onClick={handleRetweet} style={retweetAnimation || isRetweeted ? { color: \"#479489\", position: \"relative\" } : { color: \"black\", position: \"relative\" }}>\n\n                <Foreground>\n\n                    <StyledIcon icon={repeat} />\n\n                    <p style={{ position: \"absolute\", left: \"35px\", top: \"10px\" }}>{retweets}</p>\n\n                </Foreground>\n\n\n            </div>\n            <div style={{ position: \"relative\", cursor: \"pointer\" }}>\n\n                <Foreground onClick={handleLike}>\n                    {\n                        likeAnimation && isLiked ?\n                            (\n                                <SpringyHeart>\n                                    <StyledHeart style={{ fill: \"red\", stroke: \"red\" }}\n                                    />\n                                </SpringyHeart>\n                            )\n                            :\n                            (\n                                <StyledHeart style={isLiked ? { fill: \"red\", stroke: \"red\" } : { fill: \"white\" }} />\n                            )\n\n                    }\n\n                </Foreground>\n\n                <Background>\n                    {/* {likeAnimation && <PoppingCircle />} */}\n\n                    <p style={{ position: \"absolute\", left: \"35px\", top: \"10px\" }}>{likes}</p>\n                </Background>\n\n            </div>\n\n            <StyledIcon icon={share} />\n\n        </StyledActions>\n    )\n}\n\n\nconst Foreground = styled.div`\n    position: relative; \n    z-index: 1; \n`\n\nconst Background = styled.div`\n    position: absolute; \n    z-index: 0; \n    display: flex; \n`\n\nconst scale = keyframes`\n    0% {\n        transform: scale(0);\n\n    }\n    50% {\n        transform: scale(1.8); \n       \n    }\n    100% {\n        transform: scale(0)\n    }\n\n`\n\nconst scaleHeart = keyframes`\n    0% {\n        transform: scale(1);\n\n    }\n    50% {\n        transform: scale(1.8); \n    \n    }\n    100% {\n        transform: scale(1)\n    }\n`\n\n\nconst fade = keyframes`\n    from {\n        opacity: 0;\n    }\n    to {\n\n        opacity: 1; \n    }\n\n`\n\nconst PoppingCircle = styled.div`\n    display: block; \n    border-radius: 50%; \n    animation: ${fade} 800ms ease-in forwards, ${scale} 800ms ease-out forwards; \n    color: red; \n    width: 35px;\n    height: 35px; \n    background: #FAE9EC; \n\n    &:hover {\n        background: #FAE9EC; \n        padding: 9px; \n        border-radius: 50%; \n    }\n`\n\n\nconst StyledActions = styled.div`\n    display: flex; \n    justify-content: space-between;\n    width: 75%; \n\n    div {\n        display: flex; \n        justify-content: space-between;\n        /* width: 35px;  */\n        \n    }\n    \n`\n\nconst StyledIcon = styled(Icon)`\n    cursor: pointer;\n    padding: 9px;\n\n    \n`\n\n// const stylesAnimationHeart = {\n//     \"color\": \"green\" \n// }\n\n\n\nconst SpringyHeart = styled.div`\n    animation: ${scaleHeart} 800ms ease-in-out forwards;\n    \n`\n\n\n\nconst StyledHeart = styled(FiHeart)`\n    cursor: pointer; \n    padding: 9px; \n    border-radius: 50%; \n    /* z-index: 4;  */\n    color: black; \n    transition-duration: 300ms; \n    z-index: 2; \n\n\n    &:hover {\n        background: #FAE9EC; \n        padding: 9px; \n        border-radius: 50%; \n        transition-duration: 200ms; \n    }\n\n`\n\n\nexport default TweetActions; ","import React from \"react\"\nimport styled from \"styled-components\"\nimport { NavLink } from \"./NavLink\";\n\nimport { Link } from \"@reach/router\"\nimport TweetActions from \"./TweetActions\"\n\n\nconst Tweet = ({ isRetweeted, triggerFetch, isLiked, retweets, likes, retweet, tweetId, profileImg, imgSource, tweetContent, displayName, handle, timestamp }) => {\n\n\n\n\n    return (\n\n        <MainContainer>\n            {/* Top section of tweet */}\n\n            <RetweetContainer> {retweet}</RetweetContainer>\n            <PaddingContainer>\n\n\n                <ProfileImg src={profileImg} alt=\"profile-img\" />\n                <ContentContainer>\n                    <TweetHeading>\n                        <HandleAndDate>\n                            <StyledLink to={`/users/${handle}`}><h3>{displayName}</h3></StyledLink>\n                            <p>{handle}</p>\n                            <p>- {timestamp}</p>\n                        </HandleAndDate>\n                    </TweetHeading>\n                    <StyledLink to={`/tweet/${tweetId}`}>\n                        <TweetContent>\n                            <p>{tweetContent}</p>\n                            <img src={imgSource} />\n                        </TweetContent>\n                    </StyledLink>\n                    <TweetActions\n                        retweets={retweets}\n                        likes={likes}\n                        /* handleLike={handleLike} */\n                        tweetId={tweetId}\n                        isLiked={isLiked}\n                        triggerFetch={triggerFetch}\n                        isRetweeted={isRetweeted}\n                    />\n                </ContentContainer>\n            </PaddingContainer>\n\n        </MainContainer>\n\n    )\n}\n\nconst StyledLink = styled(NavLink)`\n    text-decoration: none;\n    color:black;\n\n`\n\nexport const MainContainer = styled.div`\n\n    width: 900px; \n    /* width: 100%;  */\n    \n    margin: 20px 0; \n\n    &:first-of-type{\n        border-bottom: 1px solid #eeeeee;\n    }\n    \n`\nexport const PaddingContainer = styled.div`\n    padding-left: 30px;\n    padding-top: 30px; \n    padding-bottom: 30px; \n    display: flex; \n    align-items: flex-start;\n    \n`\nexport const TweetHeading = styled.div`\n    display: flex; \n\n`\n\nexport const HandleAndDate = styled.div`\n        display: flex;\n        width: 100%; \n        h3{\n            font-weight: 700;\n            padding-right: 10px; \n\n        }\n        p{\n            padding-right: 10px; \n            color: #808080;\n        }\n    `\n\nexport const TweetContent = styled.div`\n\nmargin-top: 10px; \n\n\nwidth: 100%; \n\n    p {\n        max-width: 650px; \n    }\n    \n    img {\n        border-radius: 10px; \n        margin: 10px 0; \n        max-width: 650px; \n    }\n    \n\n`\n\nexport const ContentContainer = styled.div`\n    display: flex; \n    flex-direction: column;\n    justify-content: space-between;\n    width: 500px; \n    \n`\nexport const ProfileImg = styled.img`\n    width: 50px;\n    border-radius: 50%; \n    margin-right: 10px; \n`\nconst RetweetContainer = styled.div`\n    position: relative; \n    left: 90px; \n    top: 15px; \n    font-size: .9rem;\n    color: #50525A;\n`\n\nexport default Tweet; ","import React from \"react\"\nimport styled from \"styled-components\"\nimport COLORS from \"../constants\"\nimport { Icon } from 'react-icons-kit';\nimport { calendar } from 'react-icons-kit/feather/calendar'\nimport { mapPin } from 'react-icons-kit/feather/mapPin'\n\nconst ProfileInfo = ({ description, headerImg, avatarImg, displayName, handle, followInfo, numFollowers, numFollowing, location, joinDate }) => {\n    return (\n        <ProfileContainer>\n            <img src={headerImg} alt=\"header-image\" />\n            <AvatarContainer>\n                <img src={avatarImg} alt=\"avatar-image\" />\n                <StyledButton>Edit Profile</StyledButton>\n            </AvatarContainer>\n            {/* STYLE HERE: */}\n            <ProfileContent>\n\n                <NameAndHandle>\n                    <h2>{displayName}</h2>\n                    <ProfileName>\n                        <p>@{handle}</p>\n                        {/* <span>{followInfo}</span> */}\n                    </ProfileName>\n                </NameAndHandle>\n\n                <ProfileDescription>\n                    <div>\n                        {description}\n                    </div>\n                </ProfileDescription>\n\n                <ProfileLocation>\n                    <div>\n                        <Icon icon={mapPin} /> {location}\n                    </div>\n                    <div>\n                        <Icon icon={calendar} /> Joined {joinDate}\n                    </div>\n                </ProfileLocation>\n\n                <FollowData>\n                    <p> <span>{numFollowing}</span> Following</p>\n                    <p> <span>{numFollowers}</span>  Followers</p>\n                </FollowData>\n\n            </ProfileContent>\n            <ProfileButtons>\n                <button>\n                    Tweets\n                </button>\n                <button>\n                    Media\n                </button>\n                <button>\n                    Likes\n                </button>\n            </ProfileButtons>\n\n        </ProfileContainer>\n    )\n}\n\nconst ProfileContainer = styled.div`\n    display: flex; \n    flex-direction: column;\n\n    img {\n        width: 900px; \n    }\n`\n\n\nconst AvatarContainer = styled.div`\n    display: flex; \n    justify-content: space-between;\n    padding: 0 20px; \n    align-items: center;\n    \n    img {\n        border-radius: 50%; \n        border: 2px solid white; \n        transform: translateY(-75px);\n        width: 150px; \n    }\n`\n\nexport const StyledButton = styled.button`\n    width: 180px; \n    height: 45px; \n    padding: 10px 15px; \n    border-radius: 30px; \n    color: white;\n    font-weight: 700;\n    font-size: 1.1rem;\n    background: ${COLORS.primary};\n    cursor: pointer; \n`\n\n// MAIN CONTENT CONTAINER \nconst ProfileContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 0 20px; \n    justify-content: space-between;\n    height: 180px; \n    background: white;\n`\n\nconst NameAndHandle = styled.div`\n    h2 {\n        font-weight: 700;\n        margin-bottom: 5px; \n        font-size: 1.2rem;\n    \n    }\n`\n\nconst ProfileName = styled.div` \n    display: flex; \n    justify-content: space-between;\n    align-items: center;\n    width: 180px; \n    \n    p{\n        color: #50525A;\n    }\n    span {\n        background: #E8E9F0; \n        color: black;\n        padding: 5px 8px; \n        line-height: 1;\n        border-radius: 7px; \n        font-size: .8rem;\n    }\n`\n\n\nconst ProfileLocation = styled.div`\n    display: flex; \n    \n    width: 100%;\n    color: #50525A;\n\n    div{\n        padding-right: 20px; \n    } \n`\n\nconst ProfileDescription = styled.div`\n    display: flex; \n    justify-content: space-between;\n    width: 500px; \n`\n\nconst FollowData = styled.div`\n    display: flex; \n    justify-content: space-between;\n    width: 180px; \n\n    span{\n        font-weight: 700;\n    }\n`\n// PROF BUTTONS\n\nconst ProfileButtons = styled.div`\n    display: flex; \n    width: 100%; \n\n\n    button {\n        flex-grow: grow;\n        width: 100%; \n        height: 60px; \n        font-weight: 700; \n        font-size: 1.1rem; \n        color: grey;\n        border: none;\n        border-bottom: 1px solid grey; \n        background: white; \n        margin-top: 25px; \n    \n    \n    &:first-child {\n        border-bottom: 1px solid ${COLORS.primary};\n        color: ${COLORS.primary}; \n        }\n    }\n\n    \n`\n\n\n\nexport default ProfileInfo;","import React from 'react';\nimport styled from 'styled-components';\nimport { CurrentUserContext } from './CurrentUserContext';\nimport { styledButton, StyledButton } from './ProfileInfo'\nimport { AllUserContext } from './AllUserContext'\nimport { StyledBeatLoader } from \"./GlobalStyles\"\n\n\n\nconst TweetPoster = () => {\n\n    const { currentUser, status } = React.useContext(CurrentUserContext);\n    const { setUpdateFeed, updateFeed } = React.useContext(AllUserContext);\n\n    const [counter, setCounter] = React.useState(280);\n    const [tweetText, setTweetText] = React.useState(\"\");\n    const [tweetStatus, setTweetStatus] = React.useState(\"idle\");\n\n    const [placeHolder, setPlaceHolder] = React.useState(\"What's Happening?\")\n\n\n    const handleChange = (e) => {\n        setCounter(280 - e.target.value.length);\n        setTweetText(e.target.value);\n    }\n\n    const checkInput = () => {\n        if(tweetText.length > 0 && tweetText.length <  280) {\n            handleTweetSubmit(); \n            setPlaceHolder(\"What's Happening?\")\n        } else if(tweetText.lenght < 280){\n            setTweetStatus(\"too-long\");\n        } else if(tweetText.length === 0) {\n            setPlaceHolder(\"Can't Meow Without Saying Something\")\n        }\n    }\n\n\n    const setUpdateFeedTrigger = () => {\n        setTweetText(\"\");\n        if (updateFeed === true) {\n            setUpdateFeed(false)\n        } else setUpdateFeed(true);\n\n        setTimeout(() => {\n            setTweetStatus(\"idle\");\n        }, 700)\n\n    }\n\n    const handleTweetSubmit = () => {\n       \n       \n            setTweetStatus(\"loading\");\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ status: `${tweetText}` })\n            };\n            fetch('/api/tweet', requestOptions)\n                .then(response => response.json())\n                .then(() => setUpdateFeedTrigger())\n        \n        \n        \n\n    }\n\n\n\n\n    return (\n        <TweetBox>\n            <h2>Home</h2>\n            <InputContainer>\n                <Avatar src={currentUser.profile.avatarSrc} alt=\"avatar\" />\n                <StyledInput value={tweetText} placeholder={placeHolder} onChange={handleChange} type=\"text\" />\n            </InputContainer>\n\n            <ButtonContainer>\n                <p style={counter < 0 ? {color: \"red\"} : {color: \"black\"}}>{counter}</p>\n                <StyledButton onClick={checkInput}>\n                    {\n                        (tweetStatus == \"loading\")\n                            ?\n                            (<StyledBeatLoader />)\n                            :\n                            (\n                                \n                                (tweetStatus == \"too-long\")\n                                    ?\n                                    (\"Tweet too long!\")\n                                    :\n                                    (\"Meow\")\n                            )\n                    }              \n                </StyledButton>\n            </ButtonContainer>\n\n        </TweetBox>\n    )\n}\n\nconst ButtonContainer = styled.div`\n    position: relative; \n    right: -500px; \n    top: 80px; \n    display: flex; \n    width: 240px; \n    align-items: center;\n    justify-content: space-between;\n    \n`\n\nconst TweetBox = styled.div`\n    position: relative; \n    height: 250px; \n    left: 0px; \n    border-bottom: 1px solid #eeeeee;\n    width: 100%; \n    \n\n    h2{\n        font-weight: 700; \n        font-size: 1.2rem; \n        padding: 15px;\n        padding-left: 0; \n        border-bottom: 1px solid #EEEEEE; \n        position: relative; \n        padding-left: 20px; \n    }\n`\n\nconst StyledInput = styled.textarea`\n    width: 650px; \n    height: 120px; \n    position: absolute;\n    left: 75px; \n    border: none;\n    font-size: 1.2rem;\n    padding-left: 20px; \n    resize: none; \n\n    &:focus {\n        outline: none; \n    }\n\n    &:placeholder{\n        color: #eeeeee;\n    }\n\n    \n`\n\nconst InputContainer = styled.div`\n    display: flex;\n    padding-top: 15px; \n    padding-left: 15px; \n    \n`\n\nconst Avatar = styled.img`\n    width: 50px;\n    border-radius: 50%;  \n`\nexport default TweetPoster","import React from 'react'\nimport { CurrentUserContext } from './CurrentUserContext'\nimport Tweet from \"./Tweet\"\nimport styled from 'styled-components'\nimport { AllUserContext } from './AllUserContext'\nimport TweetPoster from \"./TweetPoster\"\nimport { Icon } from 'react-icons-kit';\nimport { repeat } from 'react-icons-kit/feather/repeat'\nimport { format } from 'date-fns'\n\nconst StyledIcon = styled(Icon)`\n    margin-right: 10px; \n`\n\n\n\nconst HomeFeed = () => {\n\n    // const { currentUser, status } = React.useContext(CurrentUserContext);\n    const { feed, feedStatus, setUpdateFeed, updateFeed } = React.useContext(AllUserContext);\n\n\n\n\n    const setUpdateFeedTrigger = () => {\n        if (updateFeed === true) {\n            setUpdateFeed(false)\n        } else setUpdateFeed(true);\n\n    }\n\n    return (\n        <>\n            <TweetPoster\n            /* setUpdateFeed={setUpdateFeedTrigger} */\n            />\n            {feed.tweetIds.map((tweetId) => {\n                return (\n                    <div key={tweetId}>\n                        <Tweet\n                            isRetweeted={feed.tweetsById[tweetId].isRetweeted}\n                            triggerFetch={setUpdateFeedTrigger}\n                            isLiked={feed.tweetsById[tweetId].isLiked}\n\n                            retweet={\n                                (feed.tweetsById[tweetId].retweetFrom)\n                                    ?\n                                    (\n                                        <div>\n                                            <StyledIcon icon={repeat} />\n                                            {feed.tweetsById[tweetId].retweetFrom.displayName}\n                                        </div>\n                                    )\n                                    :\n                                    \"\"\n\n                            }\n                            tweetId={tweetId}\n                            profileImg={feed.tweetsById[tweetId].author.avatarSrc}\n                            displayName={feed.tweetsById[tweetId].author.displayName}\n                            handle={feed.tweetsById[tweetId].author.handle}\n\n\n                            timestamp={format(new Date(feed.tweetsById[tweetId].timestamp), \"LLL \" + \"do\")}\n                            tweetContent={feed.tweetsById[tweetId].status}\n                            retweets={\n                                (feed.tweetsById[tweetId].numRetweets > 0)\n                                    ?\n                                    `${(feed.tweetsById[tweetId].numRetweets)}`\n                                    :\n                                    \"\"\n\n                            }\n\n\n                            likes={\n                                (feed.tweetsById[tweetId].numLikes > 0)\n                                    ?\n                                    `${(feed.tweetsById[tweetId].numLikes)}`\n                                    :\n                                    \"\"\n\n\n                            }\n\n                            imgSource={\n                                (feed.tweetsById[tweetId].media.length > 0)\n                                    ?\n                                    `${feed.tweetsById[tweetId].media[0].url}`\n                                    :\n                                    \"\"\n                            }\n                        />\n                    </div>\n                )\n            })}\n        </>\n\n    )\n}\n\n\n\n\n\nexport default HomeFeed;","import React from \"react\"\nimport ProfileInfo from \"./ProfileInfo\"\nimport { PageContainer, ContentContainer } from './GlobalStyles'\nimport { AllUserContext } from \"./AllUserContext\"\nimport Tweet from './Tweet'\nimport { user } from \"react-icons-kit/feather/user\";\nimport styled from \"styled-components\";\nimport { StyledPulseLoader } from \"./GlobalStyles\"\nimport { format } from 'date-fns'\n\nconst UserProfile = ({ handle }) => {\n\n    // const { feed, feedStatus } = React.useContext(AllUserContext);\n    const [userTweets, setUserTweets] = React.useState(null);\n    const [userProfile, setUserProfile] = React.useState(null);\n\n    const [triggerFetch, setTriggerFetch] = React.useState(false);\n\n    React.useEffect(() => {\n        fetch(`/api/${handle}/feed`, {\n            \"method\": \"GET\",\n            \"headers\": {}\n        })\n            .then(res => res.json())\n            .then(data => {\n                // console.log(data)\n                setUserTweets(data);\n            })\n\n\n            .catch(err => {\n                console.log(err);\n                if (err) {\n                    window.location.href = \"/error\"\n                }\n            });\n    }, [handle, triggerFetch])\n\n    React.useEffect(() => {\n\n        fetch(`/api/${handle}/profile`, {\n            \"method\": \"GET\",\n            \"headers\": {}\n\n        })\n            .then(res => res.json())\n            .then(data => {\n                setUserProfile(data);\n\n\n            })\n\n            .catch(err => {\n                console.log(err)\n            })\n\n\n\n    }, [handle])\n\n    return (\n        <>\n            {(userProfile === null)\n                ?\n                (<StyledPulseLoader />)\n                :\n                (\n                    <div>\n\n\n                        <ProfileInfo\n                            displayName={userProfile.profile.displayName}\n                            handle={userProfile.profile.handle}\n                            avatarImg={userProfile.profile.avatarSrc}\n                            headerImg={userProfile.profile.bannerSrc}\n                            description={userProfile.profile.bio}\n                            numFollowers={userProfile.profile.numFollowers}\n                            numFollowing={userProfile.profile.numFollowing}\n                            location={userProfile.profile.location}\n                            joinDate={format(new Date(userProfile.profile.joined), \"PPP\")}\n\n                            followInfo={\n\n                                (userProfile.profile.isFollowingYou)\n                                    ?\n                                    \"Follows You\"\n                                    :\n                                    \"\"\n                            }\n                        />\n                        <PositionedFollowInfo style={(userProfile.profile.isFollowingYou)\n                            ?\n                            { background: \"#E8E9F0\" }\n                            :\n                            { background: \"transparent\" }\n\n                        }>{\n                                (userProfile.profile.isFollowingYou)\n                                    ?\n                                    \"Follows You\"\n                                    :\n                                    \"\"\n                            }</PositionedFollowInfo>\n                    </div>\n                )\n            }\n            {\n                (userTweets === null)\n                    ?\n                    (<StyledPulseLoader />)\n                    :\n                    (\n                        userTweets.tweetIds.map((tweetId) => {\n\n\n                            return (\n\n                                <div key={tweetId}>\n                                    <Tweet\n                                        retweets={\n                                            (userTweets.tweetsById[tweetId].numRetweets > 0)\n                                                ?\n                                                `${(userTweets.tweetsById[tweetId].numRetweets)}`\n                                                :\n                                                \"\"\n\n                                        }\n                                        isRetweeted={userTweets.tweetsById[tweetId].isRetweeted}\n                                        triggerFetch={() => triggerFetch ? setTriggerFetch(false) : setTriggerFetch(true)}\n                                        likes={\n                                            (userTweets.tweetsById[tweetId].numLikes > 0)\n                                                ?\n                                                `${userTweets.tweetsById[tweetId].numLikes}`\n                                                :\n                                                \"\"\n                                        }\n\n                                        isLiked={userTweets.tweetsById[tweetId].isLiked}\n\n                                        tweetId={tweetId}\n                                        profileImg={userTweets.tweetsById[tweetId].author.avatarSrc}\n                                        displayName={userTweets.tweetsById[tweetId].author.displayName}\n                                        handle={userTweets.tweetsById[tweetId].author.handle}\n                                        timestamp={format(new Date(userTweets.tweetsById[tweetId].timestamp), \"LLL \" + \"do\")}\n                                        tweetContent={userTweets.tweetsById[tweetId].status}\n                                        imgSource={\n                                            (userTweets.tweetsById[tweetId].media.length > 0)\n                                                ?\n                                                `${userTweets.tweetsById[tweetId].media[0].url}`\n                                                :\n                                                \"\"\n                                        }\n                                    />\n                                </div>\n                            )\n                        })\n                    )\n            }\n\n\n\n\n\n        </>\n    )\n};\n\nconst PositionedFollowInfo = styled.p`\n    position: relative; \n    bottom: 242px;\n    left: 120px; \n    background: #E8E9F0; \n    color: black;\n    padding: 4px 5px; \n    border-radius: 7px; \n    font-size: .7rem;\n    width: fit-content; \n\n`\n\n\n\nexport default UserProfile;","import styled from \"styled-components\";\nimport { Link } from \"@reach/router\";\n\n\nexport const StyledLink = styled(Link)`\n    text-decoration: none;\n    color: black;\n    text-transform: none; \n`;\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport TweetActions from \"./TweetActions\"\nimport { StyledLink } from \"./StyledLink\"\n\n\nexport const MainContainer = styled.div`\n    width: 900px; \n    height: 100vh;     \n    margin-bottom: 20px;\n    display: flex; \n    align-items: flex-start; \n`\nexport const PaddingContainer = styled.div`\n    padding-left: 30px;\n    padding-top: 30px; \n    padding-bottom: 30px; \n    display: flex; \n    align-items: flex-start; \n    /* align-items: center; */\n    \n`\nexport const HeadingContainer = styled.div`\n    display: flex; \n    align-items: center;\n`\nexport const TweetHeading = styled.div`\n    display: flex; \n\n`\nexport const NameAndHandle = styled.div`\n         /* display: flex; */\n         width: 100%; \n        h3{\n            font-weight: 700;\n\n        }\n        p{ \n          color: #50525A; \n        }\n    `\n\nexport const TweetContent = styled.div`\n\nmargin: 20px 0; \nwidth: 100%; \n    img {\n        border-radius: 10px; \n        margin: 10px 0; \n        max-width: 650px; \n    }\n`\nexport const Title = styled.p`\n    max-width: 650px; \n    font-size: 1.2rem;\n`\nexport const TimeStamp = styled.p`\n    font-size: .9rem; \n    color: grey; \n`\n\nexport const ContentContainer = styled.div`\n    display: flex; \n    flex-direction: column;\n    justify-content: space-between;\n    width: 500px; \n    \n`\nexport const ProfileImg = styled.img`\n    width: 50px;\n    border-radius: 50%; \n    margin-right: 10px; \n`\n\n\nconst SingleTweet = ({ isRetweeted, triggerFetch, isLiked, handleLike, likeAnimation, tweetId, likes, retweets, profileImg, imgSource, tweetContent, displayName, handle, timestamp }) => {\n\n\n\n    return (\n        <MainContainer>\n            {/* Top section of tweet */}\n            <PaddingContainer>\n                {/* includes avatar image,  */}\n\n\n                <ContentContainer>\n                    {/* Display Name, Handle and Date and IMAGE */}\n                    <StyledLink to={`/users/${handle}`}>\n                        <HeadingContainer>\n                            <ProfileImg src={profileImg} alt=\"profile-img\" />\n                            <NameAndHandle>\n                                <h3>{displayName}</h3>\n                                <p>@{handle}</p>\n                            </NameAndHandle>\n                        </HeadingContainer>\n                    </StyledLink>\n\n                    <TweetContent>\n                        <Title>{tweetContent}</Title>\n                        <img src={imgSource} />\n                        <TimeStamp>{timestamp} - Critter Web App</TimeStamp>\n                    </TweetContent>\n                    <TweetActions\n                        retweets={retweets}\n                        likes={likes}\n                        handleLike={handleLike}\n                        likeAnimation={likeAnimation}\n                        tweetId={tweetId}\n                        isLiked={isLiked}\n                        triggerFetch={triggerFetch}\n                        isRetweeted={isRetweeted}\n\n\n                    />\n                </ContentContainer>\n            </PaddingContainer>\n        </MainContainer>\n\n    )\n}\nexport default SingleTweet;","import React from 'react'\nimport SingleTweet from \"./SingleTweet\"\nimport { PageContainer, ContentContainer } from './GlobalStyles';\nimport Sidebar from './Sidebar';\nimport styled from \"styled-components\"\nimport { Icon } from 'react-icons-kit';\nimport { chevronLeft } from 'react-icons-kit/feather/chevronLeft'\nimport { createHistory, Link } from \"@reach/router\"\nimport { StyledLink } from \"./StyledLink\"\nimport { StyledPulseLoader } from \"./GlobalStyles\"\nimport { AllUserContext } from \"./AllUserContext\"\nimport { format } from 'date-fns'\n\n// listen to the browser history\n\n\nconst TweetDetailsPage = ({ tweetId }) => {\n\n    const [thisTweet, setThisTweet] = React.useState(null);\n\n    const [triggerFetch, setTriggerFetch] = React.useState(false);\n\n\n    React.useEffect(() => {\n        fetch(`/api/tweet/${tweetId}`, {\n            \"method\": \"GET\",\n            \"headers\": {}\n        })\n            .then(res => res.json())\n            .then(data => {\n                setThisTweet(data);\n                // console.log(data)\n            })\n\n            .catch(err => {\n                console.log(err); \n                if(err){\n                    window.location.href = \"/error\"\n                }\n            });\n    }, [tweetId, triggerFetch])\n\n    return (\n        (thisTweet === null)\n            ?\n            (<StyledPulseLoader />)\n            :\n            (\n                <>\n                    <StyledBack>\n                        {/* <StyledLink to={`/${history.location.origin}`}><button> <Icon icon={chevronLeft} />Back</button></StyledLink> */}\n                        <button onClick={() => window.history.back()}> <Icon icon={chevronLeft} />Back</button>\n                    </StyledBack>\n                    <SingleTweet\n                        isRetweeted={thisTweet.tweet.isRetweeted}\n                        triggerFetch={()=> triggerFetch ? setTriggerFetch(false) : setTriggerFetch(true)}\n                        isLiked={thisTweet.tweet.isLiked}\n                        tweetId={thisTweet.tweet.id}\n                        profileImg={thisTweet.tweet.author.avatarSrc}\n                        imgSource={\n\n                            (thisTweet.tweet.media.length > 0)\n                                ?\n                                (thisTweet.tweet.media[0].url)\n                                :\n                                \" \"\n                        }\n                        tweetContent={thisTweet.tweet.status}\n                        displayName={thisTweet.tweet.author.displayName}\n                        handle={thisTweet.tweet.author.handle}\n                        timestamp={format(new Date(thisTweet.tweet.timestamp), \"p - \" + \"PPP \" )}\n                        retweets={\n                            (thisTweet.tweet.numRetweets > 0)\n                                ?\n                                `${(thisTweet.tweet.numRetweets)}`\n                                :\n                                \"\"\n\n                        }\n\n                        likes={\n                            (thisTweet.tweet.numLikes > 0)\n                                ?\n                                `${(thisTweet.tweet.numLikes)}`\n                                :\n                                \"\"\n\n\n                        }\n\n                    />\n                </>\n            )\n\n    )\n}\n\n\nconst StyledBack = styled.div`\n    /* position: relative;  */\n    width: 100%;\n    top: 5px; \n    border-bottom: 1px solid #eeeeee; \n    \n    button {\n        border: none; \n        color: black; \n        font-weight: 700;\n        font-size: 1.1rem;\n        cursor: pointer;\n        padding: 10px 20px; \n    }\n`\n\nexport default TweetDetailsPage;","import React from 'react'\nimport styled from 'styled-components'\nimport { GoAlert } from \"react-icons/go\";\nimport {Link} from \"@reach/router\"\n\n\n\nconst Error = () => {\n    return(\n        <Container>\n            <StyledIcon>\n                <GoAlert />\n            </StyledIcon>\n            <h2>Something is broken.</h2>\n            <p>Try going <Link to='/'>home.</Link> </p>\n        </Container>\n       \n    )\n\n}\nconst Container = styled.div`\n    position: relative;\n    display: flex; \n    flex-direction: column; \n    height: 100vh; \n    margin: 50% 50%; \n    align-items: center;\n    width: 100%; \n    h2{\n        font-weight: 700; \n        margin: 20px 0; \n        font-size: 2.2rem; \n        text-align: center;\n    }\n\n`\n\nconst StyledIcon = styled(GoAlert)`\n\n    width: 400px; \n    height: 200px; \n\n`\n\nexport default Error","import React from 'react'\nimport Sidebar from './Sidebar'\nimport styled from 'styled-components'\n\nconst StretchGoalPage = () => {\n    return (\n        <StyledStretch>\n\n            <h1>There is nothing here!</h1>    \n            <p>Check out my Readme page to read about this project.</p>\n     \n        </StyledStretch>\n    )\n};\n\nconst StyledStretch = styled.div`\n\n    text-align: center;\n    width: 900px;   \n    display: flex;\n    align-content: center;\n    margin-top: 150px; \n    height: 100vh; \n    flex-direction: column; \n\n    h1{\n        font-size: 2.0rem; \n        font-weight: 700; \n        margin-bottom: 20px; \n    }\n\n`\n\nexport default StretchGoalPage;","import React from 'react'\nimport { CurrentUserContext } from './CurrentUserContext'\nimport Tweet from \"./Tweet\"\nimport styled from 'styled-components'\nimport { AllUserContext } from './AllUserContext'\nimport TweetPoster from \"./TweetPoster\"\nimport { Icon } from 'react-icons-kit';\nimport { repeat } from 'react-icons-kit/feather/repeat'\nimport { format } from 'date-fns'\nimport ProfileInfo from './ProfileInfo'\n\nconst StyledIcon = styled(Icon)`\n    margin-right: 10px; \n`\n\n\n\nconst ProfilePageNew = () => {\n\n    // const { currentUser, status } = React.useContext(CurrentUserContext);\n    const {  feed, feedStatus, setUpdateFeed, updateFeed } = React.useContext(AllUserContext);\n\n\n    const {currentUser} = React.useContext(CurrentUserContext);\n\n\n\n\n\n    const setUpdateFeedTrigger = () => {\n        if (updateFeed === true) {\n            setUpdateFeed(false)\n        } else setUpdateFeed(true);\n\n    }\n\n    return (\n        <>\n        <ProfileInfo\n                handle={currentUser.profile.handle}\n                displayName={currentUser.profile.displayName}\n                //followInfo={\"follows you\"} //ADD TERNARY\n                avatarImg={currentUser.profile.avatarSrc}\n                headerImg={currentUser.profile.bannerSrc}\n                description={currentUser.profile.bio}\n                numFollowers={currentUser.profile.numFollowers}\n                numFollowing={currentUser.profile.numFollowing}\n                location={currentUser.profile.location}\n                joinDate={format(new Date(currentUser.profile.joined), \"PPP\")}\n            />\n            \n            {feed.tweetIds.map((tweetId) => {\n                return (\n                    <div key={tweetId}>\n                        <Tweet\n                            isRetweeted={feed.tweetsById[tweetId].isRetweeted}\n                            triggerFetch={setUpdateFeedTrigger}\n                            isLiked={feed.tweetsById[tweetId].isLiked}\n\n                            retweet={\n                                (feed.tweetsById[tweetId].retweetFrom)\n                                    ?\n                                    (\n                                        <div>\n                                            <StyledIcon icon={repeat} />\n                                            {feed.tweetsById[tweetId].retweetFrom.displayName}\n                                        </div>\n                                    )\n                                    :\n                                    \"\"\n\n                            }\n                            tweetId={tweetId}\n                            profileImg={feed.tweetsById[tweetId].author.avatarSrc}\n                            displayName={feed.tweetsById[tweetId].author.displayName}\n                            handle={feed.tweetsById[tweetId].author.handle}\n\n\n                            timestamp={format(new Date(feed.tweetsById[tweetId].timestamp), \"LLL \" + \"do\")}\n                            tweetContent={feed.tweetsById[tweetId].status}\n                            retweets={\n                                (feed.tweetsById[tweetId].numRetweets > 0)\n                                    ?\n                                    `${(feed.tweetsById[tweetId].numRetweets)}`\n                                    :\n                                    \"\"\n\n                            }\n\n\n                            likes={\n                                (feed.tweetsById[tweetId].numLikes > 0)\n                                    ?\n                                    `${(feed.tweetsById[tweetId].numLikes)}`\n                                    :\n                                    \"\"\n\n\n                            }\n\n                            imgSource={\n                                (feed.tweetsById[tweetId].media.length > 0)\n                                    ?\n                                    `${feed.tweetsById[tweetId].media[0].url}`\n                                    :\n                                    \"\"\n                            }\n                        />\n                    </div>\n                )\n            })}\n        </>\n\n    )\n}\n\n\n\n\n\nexport default ProfilePageNew;","import React from 'react';\nimport { Router } from \"@reach/router\"\nimport Bookmarks from \"./Bookmarks\"\nimport HomeFeed from './HomeFeed';\nimport ProfilePage from './ProfilePage';\nimport UserProfilePage from \"./UserProfilePage\"\nimport { CurrentUserContext } from './CurrentUserContext';\nimport { AllUserContext } from './AllUserContext'\nimport TweetDetailsPage from './TweetDetailsPage';\nimport Sidebar from \"./Sidebar\"\nimport { ContentContainer, PageContainer } from \"./GlobalStyles\"\nimport { StyledMoonLoader } from \"./GlobalStyles\"\nimport Error from \"./Error\"\nimport StretchGoal from './StretchGoalPage';\nimport ProfilePageNew from './ProfilePageNew';\n\n\n\nfunction App({ setUpdateFeed }) {\n\n  const { currentUser, status } = React.useContext(CurrentUserContext);\n  const { feed, feedStatus } = React.useContext(AllUserContext);\n\n  return (\n    <div>\n\n\n      {(status === \"loading\" || feedStatus === \"loading\") ?\n        (\n          <StyledMoonLoader\n\n          />\n\n        )\n        :\n        (\n          <PageContainer>\n            <Sidebar />\n            <ContentContainer>\n              <Router>\n                <HomeFeed path=\"/\" />\n                <StretchGoal path=\"/stretchgoal\" />\n                <Bookmarks path=\"/bookmarks\" />\n                <TweetDetailsPage path=\"/tweet/:tweetId\" />\n                <ProfilePageNew path=\"/my-profile\" />\n                <UserProfilePage path=\"/users/:handle\" />\n                <Error default />\n              </Router>\n            </ContentContainer>\n          </PageContainer>\n\n        )\n      }\n\n\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Children } from 'react'\nimport { CurrentUserContext } from './CurrentUserContext';\n\n\n\nexport const UserTweetsContext = React.createContext(null);\n\nexport const UserTweetsProvider = ({ children }) => {\n\n    const { currentUser, status } = React.useContext(CurrentUserContext);\n\n\n    const [userTweets, setUserTweets] = React.useState(null);\n\n\n\n\n    React.useEffect(() => {\n\n        fetch(`/api/${currentUser.profile.handle}/feed`, {\n            \"method\": \"GET\",\n            \"headers\": {}\n\n        })\n            .then(res => res.json())\n            .then(data => {\n                setUserTweets(data)\n            })\n            .cath(err => {\n                console.log(err)\n            })\n\n\n    }, [currentUser])\n\n\n\n    return (\n        <CurrentUserContext.Provider value={{ userTweets, setUserTweets }}>\n            {children}\n        </CurrentUserContext.Provider>\n    )\n\n\n}\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { CurrentUserProvider } from './components/CurrentUserContext';\nimport { AllUserProvider } from \"./components/AllUserContext\";\nimport { UserTweetsProvider } from './components/UserTweetsContext';\n\nReactDOM.render(\n\n  <AllUserProvider >\n    <CurrentUserProvider>\n\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n\n    </CurrentUserProvider>\n  </AllUserProvider>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}